<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.IO" #>
<#
	string templateDirectory = Path.GetDirectoryName(this.Host.ResolvePath("..\\..\\."));

    var contents = new string[4];
	
	if (templateDirectory == null)
	{
	    throw new ArgumentNullException("templateDirectory");
	}

	string buildFilePath = Path.Combine(templateDirectory, "version.txt");

#if DEBUG
	Configuration = "Debug";
    Description = "This is debug code and may have bugs. Use at your own risk.";
#else
	Configuration = "Release";
    Description = "A Visual Studio extension designed to help programmers work with XAML document.";
#endif

    // Set to recreate build file when creating a new version. Then set to false after saving once.

    if (false)
    {
        BuildNumber = 0;
        MajorVersion = 1;
        MinorVersion = 1;

        this.CopyrightYear = DateTime.UtcNow.Year.ToString(CultureInfo.InvariantCulture);
        if (File.Exists(buildFilePath))
        {
            File.Delete(buildFilePath);
        }
    }
	else
	{
	    contents = File.ReadAllLines(buildFilePath);
	    MajorVersion = Convert.ToInt32(contents[0]);
	    MinorVersion = Convert.ToInt32(contents[1]);
	    BuildNumber = Convert.ToInt32(contents[2]);
	    this.CopyrightYear = contents[3];

	    if (File.Exists(buildFilePath))
        {
            File.Delete(buildFilePath);
        }

	    this.BuildNumber++;
	}

    contents[0]=MajorVersion.ToString(CultureInfo.InvariantCulture);
    contents[1]=MinorVersion.ToString(CultureInfo.InvariantCulture);
    contents[2]=BuildNumber.ToString(CultureInfo.InvariantCulture);
    contents[3] = this.CopyrightYear;

    File.AppendAllLines(buildFilePath, contents);

    this.VersionString = string.Format("{0}.{1}.{2}.{3}", this.MajorVersion, this.MinorVersion, this.BuildNumber, this.RevisionNumber);
    Description = String.Format("{0} This extension was compiled at {1} UTC by {2}.", Description, DateTime.UtcNow, Environment.UserName);

#>
using System;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("<#= Title #>")]
[assembly: AssemblyDescription("<#= string.Format(this.Description) #>")]
[assembly: AssemblyConfiguration("<#= this.Configuration #>")]
[assembly: AssemblyCompany("<#= Company #>")]
[assembly: AssemblyProduct("<#= Title #>")]
[assembly: AssemblyCopyright("Copyright © <#= Company #> <#= this.CopyrightYear #>")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

[assembly: ComVisible(<#= IsComVisible.ToString().ToLower() #>)]
[assembly: CLSCompliant(<#= CLSCompliant.ToString().ToLower() #>)]
[assembly: NeutralResourcesLanguage("<#= Language #>")]

//Version Directory: <#= templateDirectory #>
[assembly: AssemblyVersion("<#= VersionString #>")]
[assembly: AssemblyFileVersion("<#= VersionString #>")]
[assembly: GuidAttribute("<#= assemblyGuid #>")]
<#+
	int MajorVersion;
	int MinorVersion;
	int BuildNumber;

    private string Description;

    readonly int RevisionNumber = (int)(DateTime.UtcNow - new DateTime(2010,1,1)).TotalDays;

    private const string Title = "Build Number update";

    private const string Company = "Gil Yoder";

    string CopyrightYear;
	string VersionString;
	string Configuration;

	// Setting ComVisible to false makes the types in this assembly not visible 
	// to COM components.  If you need to access a type in this assembly from 
	// COM, set the ComVisible attribute to true on that type.
    private const bool IsComVisible = true;

    private const bool CLSCompliant = false;

    private const string Language = "en-US";

    private const string assemblyGuid = "793059A6-D5B8-4D35-B2C2-E415ACB2869F";

    #>
